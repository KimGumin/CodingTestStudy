import java.util.*;

public class Main {
	static int array[][];
	static boolean visit[][];
	static int size, min, max;
	static int count = 0;
	static int dx[] = { -1, 1, 0, 0 };
	static int dy[] = { 0, 0, -1, 1 };
	

	static class xy {
		int x, y;

		public xy(int x, int y) {
			this.x = x;
			this.y = y;
		}
	}

	static void input() {
		Scanner sc = new Scanner(System.in);
		System.out.print("크기를 입력하시오 : ");
		size = sc.nextInt();
		System.out.print("최소와 최대를 입력하시오 : ");
		min = sc.nextInt();
		max = sc.nextInt();

		array = new int[size][size];
		visit = new boolean[size][size];
		
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				array[i][j] = sc.nextInt();
			}
		}

		while (true) {
			visit = new boolean[size][size]; // 방문 초기화
			if (!check()) {
				count++; // 인구이동이 또 필요한 경우
			} else {
				break;
			}
		}
		System.out.println(count);
	}

	static boolean check() {
		List<xy> list;
		boolean isDone = true;
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				if (!visit[i][j]) {
					list = new LinkedList<xy>();
					list.add(new xy(i, j));
					int sum = dfs(i, j, list, 0);
					if (list.size() > 1) {
						change(sum, list);
						isDone = false;
					}
				}
			}
		}
		return isDone;
	}

	static int dfs(int x, int y, List<xy> list, int sum) {
		visit[x][y] = true;
		sum = array[x][y];
		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if (nx < 0 || nx >= size || ny < 0 || ny >= size)
				continue;
			if (!visit[nx][ny]) {
				if (Math.abs(array[x][y] - array[nx][ny]) >= min && Math.abs(array[x][y] - array[nx][ny]) <= max) {
					list.add(new xy(nx, ny));
					sum += dfs(nx, ny, list, sum);
				}
			}
		}
		return sum;
	}

	static void change(int sum, List<xy> list) {
		int avg = sum / list.size();
		for (xy dot : list)
			array[dot.x][dot.y] = avg;
	}

	public static void main(String[] args) {
		input();
	}
}
